/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
##--------------------------------------------------------------------------------------------------------
## Key fields = fields in Primary Key    
#set( $keyFields = $entity.getAttributesByCriteria( $const.KEY ) )
##--------------------------------------------------------------------------------------------------------
## Data fields = fields not in Primary Key and not in selected Links    
## #set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY ) )
##--------------------------------------------------------------------------------------------------------
## Link fields = fields not in Primary Key and used as FK in selected Links    
#set( $fieldsLink = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )
##--------------------------------------------------------------------------------------------------------
## Mapped fields = fields in Primary Key or not in selected Links    
#set( $allMappedFields = $fn.concatLists($entity.keyAttributes, $dataFields) )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder($SRC)};

import java.io.Serializable;

import javax.validation.constraints.*;
import java.util.*;
#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

public class $entity.name extends ${target.javaPackageFromFolder($SRC)}.base.$entity.name implements Serializable {

    private static final long serialVersionUID = 1L;
     //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
## #foreach( $link in $entity.links )
#foreach( $link in $entity.selectedLinks )
    protected ${link.formattedFieldType(0)} $link.formattedFieldName(12);
#end

#*
    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
#foreach( $link in $entity.selectedLinks )
    private $link.formattedType(0) $link.formattedName(0);

#end
*#

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
## #foreach( $link in $entity.links )
#foreach( $link in $entity.selectedLinks )
#if ( $link.setter )    public void ${link.setter}( ${link.formattedFieldType(0)} ${link.formattedFieldName(0)} ) {
        this.${link.formattedFieldName(0)} = ${link.formattedFieldName(0)};
    }
#end
#if ( $link.getter )    public ${link.formattedFieldType(0)} ${link.getter}() {
        return this.${link.formattedFieldName(0)};
    }
#end

#end  

}
