/*
 * Created on 13 五月 2015 ( Time 21:15:25 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dt.hippo.auto.model.Comboinfo;
import com.dt.hippo.auto.business.service.ComboinfoService;
import com.dt.hippo.auto.web.listitem.ComboinfoListItem;

/**
 * Spring MVC controller for 'Comboinfo' management.
 */
@Controller
public class ComboinfoRestController {

	@Resource
	protected ComboinfoService comboinfoService;
	
	@RequestMapping( value="/items/comboinfo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ComboinfoListItem> findAllAsListItems() {
		List<Comboinfo> list = comboinfoService.findAll();
		List<ComboinfoListItem> items = new LinkedList<ComboinfoListItem>();
		for ( Comboinfo comboinfo : list ) {
			items.add(new ComboinfoListItem( comboinfo ) );
		}
		return items;
	}
	
	@RequestMapping( value="/comboinfo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Comboinfo> findAll() {
		return comboinfoService.findAll();
	}

	@RequestMapping( value="/comboinfo/{uid}/{childid}/{specificationid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Comboinfo findOne(@PathVariable("uid") Long uid, @PathVariable("childid") Long childid, @PathVariable("specificationid") Long specificationid) {
		return comboinfoService.findById(uid, childid, specificationid);
	}
	
	@RequestMapping( value="/comboinfo",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Comboinfo create(@RequestBody Comboinfo comboinfo) {
		return comboinfoService.create(comboinfo);
	}

	@RequestMapping( value="/comboinfo/{uid}/{childid}/{specificationid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Comboinfo update(@PathVariable("uid") Long uid, @PathVariable("childid") Long childid, @PathVariable("specificationid") Long specificationid, @RequestBody Comboinfo comboinfo) {
		return comboinfoService.update(comboinfo);
	}

	@RequestMapping( value="/comboinfo/{uid}/{childid}/{specificationid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("uid") Long uid, @PathVariable("childid") Long childid, @PathVariable("specificationid") Long specificationid) {
		comboinfoService.delete(uid, childid, specificationid);
	}
	
}
