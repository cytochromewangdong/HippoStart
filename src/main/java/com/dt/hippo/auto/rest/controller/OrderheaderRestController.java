/*
 * Created on 13 五月 2015 ( Time 21:15:28 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dt.hippo.auto.model.Orderheader;
import com.dt.hippo.auto.business.service.OrderheaderService;
import com.dt.hippo.auto.web.listitem.OrderheaderListItem;

/**
 * Spring MVC controller for 'Orderheader' management.
 */
@Controller
public class OrderheaderRestController {

	@Resource
	protected OrderheaderService orderheaderService;
	
	@RequestMapping( value="/items/orderheader",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<OrderheaderListItem> findAllAsListItems() {
		List<Orderheader> list = orderheaderService.findAll();
		List<OrderheaderListItem> items = new LinkedList<OrderheaderListItem>();
		for ( Orderheader orderheader : list ) {
			items.add(new OrderheaderListItem( orderheader ) );
		}
		return items;
	}
	
	@RequestMapping( value="/orderheader",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Orderheader> findAll() {
		return orderheaderService.findAll();
	}

	@RequestMapping( value="/orderheader/{uid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Orderheader findOne(@PathVariable("uid") Long uid) {
		return orderheaderService.findById(uid);
	}
	
	@RequestMapping( value="/orderheader",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Orderheader create(@RequestBody Orderheader orderheader) {
		return orderheaderService.create(orderheader);
	}

	@RequestMapping( value="/orderheader/{uid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Orderheader update(@PathVariable("uid") Long uid, @RequestBody Orderheader orderheader) {
		return orderheaderService.update(orderheader);
	}

	@RequestMapping( value="/orderheader/{uid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("uid") Long uid) {
		orderheaderService.delete(uid);
	}
	
}
