/*
 * Created on 13 五月 2015 ( Time 21:15:31 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dt.hippo.auto.model.Scoreinfo;
import com.dt.hippo.auto.business.service.ScoreinfoService;
import com.dt.hippo.auto.web.listitem.ScoreinfoListItem;

/**
 * Spring MVC controller for 'Scoreinfo' management.
 */
@Controller
public class ScoreinfoRestController {

	@Resource
	protected ScoreinfoService scoreinfoService;
	
	@RequestMapping( value="/items/scoreinfo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ScoreinfoListItem> findAllAsListItems() {
		List<Scoreinfo> list = scoreinfoService.findAll();
		List<ScoreinfoListItem> items = new LinkedList<ScoreinfoListItem>();
		for ( Scoreinfo scoreinfo : list ) {
			items.add(new ScoreinfoListItem( scoreinfo ) );
		}
		return items;
	}
	
	@RequestMapping( value="/scoreinfo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Scoreinfo> findAll() {
		return scoreinfoService.findAll();
	}

	@RequestMapping( value="/scoreinfo/{uid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Scoreinfo findOne(@PathVariable("uid") Long uid) {
		return scoreinfoService.findById(uid);
	}
	
	@RequestMapping( value="/scoreinfo",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Scoreinfo create(@RequestBody Scoreinfo scoreinfo) {
		return scoreinfoService.create(scoreinfo);
	}

	@RequestMapping( value="/scoreinfo/{uid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Scoreinfo update(@PathVariable("uid") Long uid, @RequestBody Scoreinfo scoreinfo) {
		return scoreinfoService.update(scoreinfo);
	}

	@RequestMapping( value="/scoreinfo/{uid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("uid") Long uid) {
		scoreinfoService.delete(uid);
	}
	
}
