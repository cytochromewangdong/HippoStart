/*
 * Created on 13 五月 2015 ( Time 21:15:25 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dt.hippo.auto.model.Dishspecificationinfo;
import com.dt.hippo.auto.business.service.DishspecificationinfoService;
import com.dt.hippo.auto.web.listitem.DishspecificationinfoListItem;

/**
 * Spring MVC controller for 'Dishspecificationinfo' management.
 */
@Controller
@RequestMapping("/rest")
public class DishspecificationinfoRestController {

	@Resource
	protected DishspecificationinfoService dishspecificationinfoService;
	
	@RequestMapping( value="/items/dishspecificationinfo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DishspecificationinfoListItem> findAllAsListItems() {
		List<Dishspecificationinfo> list = dishspecificationinfoService.findAll();
		List<DishspecificationinfoListItem> items = new LinkedList<DishspecificationinfoListItem>();
		for ( Dishspecificationinfo dishspecificationinfo : list ) {
			items.add(new DishspecificationinfoListItem( dishspecificationinfo ) );
		}
		return items;
	}
	
	@RequestMapping( value="/dishspecificationinfo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Dishspecificationinfo> findAll() {
		return dishspecificationinfoService.findAll();
	}

	@RequestMapping( value="/dishspecificationinfo/{dishid}/{uid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Dishspecificationinfo findOne(@PathVariable("dishid") Long dishid, @PathVariable("uid") Long uid) {
		return dishspecificationinfoService.findById(dishid, uid);
	}
	
	@RequestMapping( value="/dishspecificationinfo",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Dishspecificationinfo create(@RequestBody Dishspecificationinfo dishspecificationinfo) {
		return dishspecificationinfoService.create(dishspecificationinfo);
	}

	@RequestMapping( value="/dishspecificationinfo/{dishid}/{uid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Dishspecificationinfo update(@PathVariable("dishid") Long dishid, @PathVariable("uid") Long uid, @RequestBody Dishspecificationinfo dishspecificationinfo) {
		return dishspecificationinfoService.update(dishspecificationinfo);
	}

	@RequestMapping( value="/dishspecificationinfo/{dishid}/{uid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("dishid") Long dishid, @PathVariable("uid") Long uid) {
		dishspecificationinfoService.delete(dishid, uid);
	}
	
}
