/*
 * Created on 13 五月 2015 ( Time 21:15:29 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dt.hippo.auto.model.Pointrule;
import com.dt.hippo.auto.business.service.PointruleService;
import com.dt.hippo.auto.web.listitem.PointruleListItem;

/**
 * Spring MVC controller for 'Pointrule' management.
 */
@Controller
public class PointruleRestController {

	@Resource
	protected PointruleService pointruleService;
	
	@RequestMapping( value="/items/pointrule",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PointruleListItem> findAllAsListItems() {
		List<Pointrule> list = pointruleService.findAll();
		List<PointruleListItem> items = new LinkedList<PointruleListItem>();
		for ( Pointrule pointrule : list ) {
			items.add(new PointruleListItem( pointrule ) );
		}
		return items;
	}
	
	@RequestMapping( value="/pointrule",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Pointrule> findAll() {
		return pointruleService.findAll();
	}

	@RequestMapping( value="/pointrule/{type}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Pointrule findOne(@PathVariable("type") Byte type) {
		return pointruleService.findById(type);
	}
	
	@RequestMapping( value="/pointrule",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Pointrule create(@RequestBody Pointrule pointrule) {
		return pointruleService.create(pointrule);
	}

	@RequestMapping( value="/pointrule/{type}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Pointrule update(@PathVariable("type") Byte type, @RequestBody Pointrule pointrule) {
		return pointruleService.update(pointrule);
	}

	@RequestMapping( value="/pointrule/{type}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("type") Byte type) {
		pointruleService.delete(type);
	}
	
}
