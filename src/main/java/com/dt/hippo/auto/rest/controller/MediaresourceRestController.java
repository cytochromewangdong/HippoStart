/*
 * Created on 18 五月 2015 ( Time 11:12:59 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.dt.hippo.auto.model.Mediaresource;
import com.dt.hippo.auto.business.service.MediaresourceService;
import com.dt.hippo.auto.web.listitem.MediaresourceListItem;

/**
 * Spring MVC controller for 'Mediaresource' management.
 */
@Controller
@RequestMapping("/api")
public class MediaresourceRestController {

	@Resource
	protected MediaresourceService mediaresourceService;
	
	@RequestMapping( value="/items/mediaresource",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MediaresourceListItem> findAllAsListItems() {
		List<Mediaresource> list = mediaresourceService.findAll();
		List<MediaresourceListItem> items = new LinkedList<MediaresourceListItem>();
		for ( Mediaresource mediaresource : list ) {
			items.add(new MediaresourceListItem( mediaresource ) );
		}
		return items;
	}
	
	@RequestMapping( value="/mediaresource",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Mediaresource> findAll() {
		return mediaresourceService.findAll();
	}

	@RequestMapping( value="/mediaresource/{uid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Mediaresource findOne(@PathVariable("uid") Long uid) {
		return mediaresourceService.findById(uid);
	}
	
	@RequestMapping( value="/mediaresource",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Mediaresource create(@RequestBody Mediaresource mediaresource) {
		return mediaresourceService.create(mediaresource);
	}

	@RequestMapping( value="/mediaresource/{uid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Mediaresource update(@PathVariable("uid") Long uid, @RequestBody Mediaresource mediaresource) {
		return mediaresourceService.update(mediaresource);
	}

	@RequestMapping( value="/mediaresource/{uid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("uid") Long uid) {
		mediaresourceService.delete(uid);
	}
	
}
