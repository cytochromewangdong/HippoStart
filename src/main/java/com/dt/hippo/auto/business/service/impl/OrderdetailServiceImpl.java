/*
 * Created on 18 五月 2015 ( Time 11:07:13 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Orderdetail;
import com.dt.hippo.auto.model.jpa.OrderdetailEntity;
import java.util.Date;
import com.dt.hippo.auto.business.service.OrderdetailService;
import com.dt.hippo.auto.business.service.mapping.OrderdetailServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.OrderdetailJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of OrderdetailService
 */
@Service("orderdetailService")
@Transactional
public class OrderdetailServiceImpl implements OrderdetailService {

	@Resource
	protected OrderdetailJpaRepository orderdetailJpaRepository;

	@Resource
	protected OrderdetailServiceMapper orderdetailServiceMapper;
	
	@Override
	public Orderdetail findById(Long uid) {
		OrderdetailEntity orderdetailEntity = orderdetailJpaRepository.findOne(uid);
		return orderdetailServiceMapper.mapOrderdetailEntityToOrderdetail(orderdetailEntity);
	}

	@Override
	public List<Orderdetail> findAll() {
		Iterable<OrderdetailEntity> entities = orderdetailJpaRepository.findAll();
		List<Orderdetail> beans = new ArrayList<Orderdetail>();
		for(OrderdetailEntity orderdetailEntity : entities) {
			beans.add(orderdetailServiceMapper.mapOrderdetailEntityToOrderdetail(orderdetailEntity));
		}
		return beans;
	}

	@Override
	public Orderdetail save(Orderdetail orderdetail) {
		return update(orderdetail) ;
	}

	@Override
	public Orderdetail create(Orderdetail orderdetail) {
//		OrderdetailEntity orderdetailEntity = orderdetailJpaRepository.findOne(orderdetail.getUid());
//		if( orderdetailEntity != null ) {
//			throw new IllegalStateException("already.exists");
//		}
		OrderdetailEntity orderdetailEntity = new OrderdetailEntity();
		orderdetailServiceMapper.mapOrderdetailToOrderdetailEntity(orderdetail, orderdetailEntity);
		OrderdetailEntity orderdetailEntitySaved = orderdetailJpaRepository.save(orderdetailEntity);
		return orderdetailServiceMapper.mapOrderdetailEntityToOrderdetail(orderdetailEntitySaved);
	}

	@Override
	public Orderdetail update(Orderdetail orderdetail) {
		OrderdetailEntity orderdetailEntity = orderdetailJpaRepository.findOne(orderdetail.getUid());
		orderdetailServiceMapper.mapOrderdetailToOrderdetailEntity(orderdetail, orderdetailEntity);
		OrderdetailEntity orderdetailEntitySaved = orderdetailJpaRepository.save(orderdetailEntity);
		return orderdetailServiceMapper.mapOrderdetailEntityToOrderdetail(orderdetailEntitySaved);
	}

	@Override
	public void delete(Long uid) {
		orderdetailJpaRepository.delete(uid);
	}

	public OrderdetailJpaRepository getOrderdetailJpaRepository() {
		return orderdetailJpaRepository;
	}

	public void setOrderdetailJpaRepository(OrderdetailJpaRepository orderdetailJpaRepository) {
		this.orderdetailJpaRepository = orderdetailJpaRepository;
	}

	public OrderdetailServiceMapper getOrderdetailServiceMapper() {
		return orderdetailServiceMapper;
	}

	public void setOrderdetailServiceMapper(OrderdetailServiceMapper orderdetailServiceMapper) {
		this.orderdetailServiceMapper = orderdetailServiceMapper;
	}

}
