/*
 * Created on 13 五月 2015 ( Time 21:15:30 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Scoreinfo;
import com.dt.hippo.auto.model.jpa.ScoreinfoEntity;
import java.util.Date;
import com.dt.hippo.auto.business.service.ScoreinfoService;
import com.dt.hippo.auto.business.service.mapping.ScoreinfoServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.ScoreinfoJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ScoreinfoService
 */
@Service("scoreinfoService")
@Transactional
public class ScoreinfoServiceImpl implements ScoreinfoService {

	@Resource
	protected ScoreinfoJpaRepository scoreinfoJpaRepository;

	@Resource
	protected ScoreinfoServiceMapper scoreinfoServiceMapper;
	
	@Override
	public Scoreinfo findById(Long uid) {
		ScoreinfoEntity scoreinfoEntity = scoreinfoJpaRepository.findOne(uid);
		return scoreinfoServiceMapper.mapScoreinfoEntityToScoreinfo(scoreinfoEntity);
	}

	@Override
	public List<Scoreinfo> findAll() {
		Iterable<ScoreinfoEntity> entities = scoreinfoJpaRepository.findAll();
		List<Scoreinfo> beans = new ArrayList<Scoreinfo>();
		for(ScoreinfoEntity scoreinfoEntity : entities) {
			beans.add(scoreinfoServiceMapper.mapScoreinfoEntityToScoreinfo(scoreinfoEntity));
		}
		return beans;
	}

	@Override
	public Scoreinfo save(Scoreinfo scoreinfo) {
		return update(scoreinfo) ;
	}

	@Override
	public Scoreinfo create(Scoreinfo scoreinfo) {
		ScoreinfoEntity scoreinfoEntity = scoreinfoJpaRepository.findOne(scoreinfo.getUid());
		if( scoreinfoEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		scoreinfoEntity = new ScoreinfoEntity();
		scoreinfoServiceMapper.mapScoreinfoToScoreinfoEntity(scoreinfo, scoreinfoEntity);
		ScoreinfoEntity scoreinfoEntitySaved = scoreinfoJpaRepository.save(scoreinfoEntity);
		return scoreinfoServiceMapper.mapScoreinfoEntityToScoreinfo(scoreinfoEntitySaved);
	}

	@Override
	public Scoreinfo update(Scoreinfo scoreinfo) {
		ScoreinfoEntity scoreinfoEntity = scoreinfoJpaRepository.findOne(scoreinfo.getUid());
		scoreinfoServiceMapper.mapScoreinfoToScoreinfoEntity(scoreinfo, scoreinfoEntity);
		ScoreinfoEntity scoreinfoEntitySaved = scoreinfoJpaRepository.save(scoreinfoEntity);
		return scoreinfoServiceMapper.mapScoreinfoEntityToScoreinfo(scoreinfoEntitySaved);
	}

	@Override
	public void delete(Long uid) {
		scoreinfoJpaRepository.delete(uid);
	}

	public ScoreinfoJpaRepository getScoreinfoJpaRepository() {
		return scoreinfoJpaRepository;
	}

	public void setScoreinfoJpaRepository(ScoreinfoJpaRepository scoreinfoJpaRepository) {
		this.scoreinfoJpaRepository = scoreinfoJpaRepository;
	}

	public ScoreinfoServiceMapper getScoreinfoServiceMapper() {
		return scoreinfoServiceMapper;
	}

	public void setScoreinfoServiceMapper(ScoreinfoServiceMapper scoreinfoServiceMapper) {
		this.scoreinfoServiceMapper = scoreinfoServiceMapper;
	}

}
