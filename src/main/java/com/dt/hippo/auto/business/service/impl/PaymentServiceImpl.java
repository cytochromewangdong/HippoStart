/*
 * Created on 13 五月 2015 ( Time 21:15:28 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Payment;
import com.dt.hippo.auto.model.jpa.PaymentEntity;
import java.util.Date;
import com.dt.hippo.auto.business.service.PaymentService;
import com.dt.hippo.auto.business.service.mapping.PaymentServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.PaymentJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of PaymentService
 */
@Service("paymentService")
@Transactional
public class PaymentServiceImpl implements PaymentService {

	@Resource
	protected PaymentJpaRepository paymentJpaRepository;

	@Resource
	protected PaymentServiceMapper paymentServiceMapper;
	
	@Override
	public Payment findById(Long uid) {
		PaymentEntity paymentEntity = paymentJpaRepository.findOne(uid);
		return paymentServiceMapper.mapPaymentEntityToPayment(paymentEntity);
	}

	@Override
	public List<Payment> findAll() {
		Iterable<PaymentEntity> entities = paymentJpaRepository.findAll();
		List<Payment> beans = new ArrayList<Payment>();
		for(PaymentEntity paymentEntity : entities) {
			beans.add(paymentServiceMapper.mapPaymentEntityToPayment(paymentEntity));
		}
		return beans;
	}

	@Override
	public Payment save(Payment payment) {
		return update(payment) ;
	}

	@Override
	public Payment create(Payment payment) {
		PaymentEntity paymentEntity = paymentJpaRepository.findOne(payment.getUid());
		if( paymentEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		paymentEntity = new PaymentEntity();
		paymentServiceMapper.mapPaymentToPaymentEntity(payment, paymentEntity);
		PaymentEntity paymentEntitySaved = paymentJpaRepository.save(paymentEntity);
		return paymentServiceMapper.mapPaymentEntityToPayment(paymentEntitySaved);
	}

	@Override
	public Payment update(Payment payment) {
		PaymentEntity paymentEntity = paymentJpaRepository.findOne(payment.getUid());
		paymentServiceMapper.mapPaymentToPaymentEntity(payment, paymentEntity);
		PaymentEntity paymentEntitySaved = paymentJpaRepository.save(paymentEntity);
		return paymentServiceMapper.mapPaymentEntityToPayment(paymentEntitySaved);
	}

	@Override
	public void delete(Long uid) {
		paymentJpaRepository.delete(uid);
	}

	public PaymentJpaRepository getPaymentJpaRepository() {
		return paymentJpaRepository;
	}

	public void setPaymentJpaRepository(PaymentJpaRepository paymentJpaRepository) {
		this.paymentJpaRepository = paymentJpaRepository;
	}

	public PaymentServiceMapper getPaymentServiceMapper() {
		return paymentServiceMapper;
	}

	public void setPaymentServiceMapper(PaymentServiceMapper paymentServiceMapper) {
		this.paymentServiceMapper = paymentServiceMapper;
	}

}
