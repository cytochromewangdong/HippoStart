/*
 * Created on 18 五月 2015 ( Time 11:07:19 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Uservoucher;
import com.dt.hippo.auto.model.jpa.UservoucherEntity;
import java.util.Date;
import com.dt.hippo.auto.business.service.UservoucherService;
import com.dt.hippo.auto.business.service.mapping.UservoucherServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.UservoucherJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of UservoucherService
 */
@Service("uservoucherService")
@Transactional
public class UservoucherServiceImpl implements UservoucherService {

	@Resource
	protected UservoucherJpaRepository uservoucherJpaRepository;

	@Resource
	protected UservoucherServiceMapper uservoucherServiceMapper;
	
	@Override
	public Uservoucher findById(Long uid) {
		UservoucherEntity uservoucherEntity = uservoucherJpaRepository.findOne(uid);
		return uservoucherServiceMapper.mapUservoucherEntityToUservoucher(uservoucherEntity);
	}

	@Override
	public List<Uservoucher> findAll() {
		Iterable<UservoucherEntity> entities = uservoucherJpaRepository.findAll();
		List<Uservoucher> beans = new ArrayList<Uservoucher>();
		for(UservoucherEntity uservoucherEntity : entities) {
			beans.add(uservoucherServiceMapper.mapUservoucherEntityToUservoucher(uservoucherEntity));
		}
		return beans;
	}

	@Override
	public Uservoucher save(Uservoucher uservoucher) {
		return update(uservoucher) ;
	}

	@Override
	public Uservoucher create(Uservoucher uservoucher) {
//		UservoucherEntity uservoucherEntity = uservoucherJpaRepository.findOne(uservoucher.getUid());
//		if( uservoucherEntity != null ) {
//			throw new IllegalStateException("already.exists");
//		}
		UservoucherEntity uservoucherEntity = new UservoucherEntity();
		uservoucherServiceMapper.mapUservoucherToUservoucherEntity(uservoucher, uservoucherEntity);
		UservoucherEntity uservoucherEntitySaved = uservoucherJpaRepository.save(uservoucherEntity);
		return uservoucherServiceMapper.mapUservoucherEntityToUservoucher(uservoucherEntitySaved);
	}

	@Override
	public Uservoucher update(Uservoucher uservoucher) {
		UservoucherEntity uservoucherEntity = uservoucherJpaRepository.findOne(uservoucher.getUid());
		uservoucherServiceMapper.mapUservoucherToUservoucherEntity(uservoucher, uservoucherEntity);
		UservoucherEntity uservoucherEntitySaved = uservoucherJpaRepository.save(uservoucherEntity);
		return uservoucherServiceMapper.mapUservoucherEntityToUservoucher(uservoucherEntitySaved);
	}

	@Override
	public void delete(Long uid) {
		uservoucherJpaRepository.delete(uid);
	}

	public UservoucherJpaRepository getUservoucherJpaRepository() {
		return uservoucherJpaRepository;
	}

	public void setUservoucherJpaRepository(UservoucherJpaRepository uservoucherJpaRepository) {
		this.uservoucherJpaRepository = uservoucherJpaRepository;
	}

	public UservoucherServiceMapper getUservoucherServiceMapper() {
		return uservoucherServiceMapper;
	}

	public void setUservoucherServiceMapper(UservoucherServiceMapper uservoucherServiceMapper) {
		this.uservoucherServiceMapper = uservoucherServiceMapper;
	}

}
