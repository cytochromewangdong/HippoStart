/*
 * Created on 14 五月 2015 ( Time 21:38:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Pointrule;
import com.dt.hippo.auto.model.jpa.PointruleEntity;
import java.util.Date;
import com.dt.hippo.auto.business.service.PointruleService;
import com.dt.hippo.auto.business.service.mapping.PointruleServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.PointruleJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of PointruleService
 */
@Service("pointruleService")
@Transactional
public class PointruleServiceImpl implements PointruleService {

	@Resource
	protected PointruleJpaRepository pointruleJpaRepository;

	@Resource
	protected PointruleServiceMapper pointruleServiceMapper;
	
	@Override
	public Pointrule findById(Byte type) {
		PointruleEntity pointruleEntity = pointruleJpaRepository.findOne(type);
		return pointruleServiceMapper.mapPointruleEntityToPointrule(pointruleEntity);
	}

	@Override
	public List<Pointrule> findAll() {
		Iterable<PointruleEntity> entities = pointruleJpaRepository.findAll();
		List<Pointrule> beans = new ArrayList<Pointrule>();
		for(PointruleEntity pointruleEntity : entities) {
			beans.add(pointruleServiceMapper.mapPointruleEntityToPointrule(pointruleEntity));
		}
		return beans;
	}

	@Override
	public Pointrule save(Pointrule pointrule) {
		return update(pointrule) ;
	}

	@Override
	public Pointrule create(Pointrule pointrule) {
//		PointruleEntity pointruleEntity = pointruleJpaRepository.findOne(pointrule.getType());
//		if( pointruleEntity != null ) {
//			throw new IllegalStateException("already.exists");
//		}
		PointruleEntity pointruleEntity = new PointruleEntity();
		pointruleServiceMapper.mapPointruleToPointruleEntity(pointrule, pointruleEntity);
		PointruleEntity pointruleEntitySaved = pointruleJpaRepository.save(pointruleEntity);
		return pointruleServiceMapper.mapPointruleEntityToPointrule(pointruleEntitySaved);
	}

	@Override
	public Pointrule update(Pointrule pointrule) {
		PointruleEntity pointruleEntity = pointruleJpaRepository.findOne(pointrule.getType());
		pointruleServiceMapper.mapPointruleToPointruleEntity(pointrule, pointruleEntity);
		PointruleEntity pointruleEntitySaved = pointruleJpaRepository.save(pointruleEntity);
		return pointruleServiceMapper.mapPointruleEntityToPointrule(pointruleEntitySaved);
	}

	@Override
	public void delete(Byte type) {
		pointruleJpaRepository.delete(type);
	}

	public PointruleJpaRepository getPointruleJpaRepository() {
		return pointruleJpaRepository;
	}

	public void setPointruleJpaRepository(PointruleJpaRepository pointruleJpaRepository) {
		this.pointruleJpaRepository = pointruleJpaRepository;
	}

	public PointruleServiceMapper getPointruleServiceMapper() {
		return pointruleServiceMapper;
	}

	public void setPointruleServiceMapper(PointruleServiceMapper pointruleServiceMapper) {
		this.pointruleServiceMapper = pointruleServiceMapper;
	}

}
