/*
 * Created on 18 五月 2015 ( Time 11:07:17 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Storeinfo;
import com.dt.hippo.auto.model.jpa.StoreinfoEntity;
import java.util.Date;
import com.dt.hippo.auto.business.service.StoreinfoService;
import com.dt.hippo.auto.business.service.mapping.StoreinfoServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.StoreinfoJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StoreinfoService
 */
@Service("storeinfoService")
@Transactional
public class StoreinfoServiceImpl implements StoreinfoService {

	@Resource
	protected StoreinfoJpaRepository storeinfoJpaRepository;

	@Resource
	protected StoreinfoServiceMapper storeinfoServiceMapper;
	
	@Override
	public Storeinfo findById(Long uid) {
		StoreinfoEntity storeinfoEntity = storeinfoJpaRepository.findOne(uid);
		return storeinfoServiceMapper.mapStoreinfoEntityToStoreinfo(storeinfoEntity);
	}

	@Override
	public List<Storeinfo> findAll() {
		Iterable<StoreinfoEntity> entities = storeinfoJpaRepository.findAll();
		List<Storeinfo> beans = new ArrayList<Storeinfo>();
		for(StoreinfoEntity storeinfoEntity : entities) {
			beans.add(storeinfoServiceMapper.mapStoreinfoEntityToStoreinfo(storeinfoEntity));
		}
		return beans;
	}

	@Override
	public Storeinfo save(Storeinfo storeinfo) {
		return update(storeinfo) ;
	}

	@Override
	public Storeinfo create(Storeinfo storeinfo) {
//		StoreinfoEntity storeinfoEntity = storeinfoJpaRepository.findOne(storeinfo.getUid());
//		if( storeinfoEntity != null ) {
//			throw new IllegalStateException("already.exists");
//		}
		StoreinfoEntity storeinfoEntity = new StoreinfoEntity();
		storeinfoServiceMapper.mapStoreinfoToStoreinfoEntity(storeinfo, storeinfoEntity);
		StoreinfoEntity storeinfoEntitySaved = storeinfoJpaRepository.save(storeinfoEntity);
		return storeinfoServiceMapper.mapStoreinfoEntityToStoreinfo(storeinfoEntitySaved);
	}

	@Override
	public Storeinfo update(Storeinfo storeinfo) {
		StoreinfoEntity storeinfoEntity = storeinfoJpaRepository.findOne(storeinfo.getUid());
		storeinfoServiceMapper.mapStoreinfoToStoreinfoEntity(storeinfo, storeinfoEntity);
		StoreinfoEntity storeinfoEntitySaved = storeinfoJpaRepository.save(storeinfoEntity);
		return storeinfoServiceMapper.mapStoreinfoEntityToStoreinfo(storeinfoEntitySaved);
	}

	@Override
	public void delete(Long uid) {
		storeinfoJpaRepository.delete(uid);
	}

	public StoreinfoJpaRepository getStoreinfoJpaRepository() {
		return storeinfoJpaRepository;
	}

	public void setStoreinfoJpaRepository(StoreinfoJpaRepository storeinfoJpaRepository) {
		this.storeinfoJpaRepository = storeinfoJpaRepository;
	}

	public StoreinfoServiceMapper getStoreinfoServiceMapper() {
		return storeinfoServiceMapper;
	}

	public void setStoreinfoServiceMapper(StoreinfoServiceMapper storeinfoServiceMapper) {
		this.storeinfoServiceMapper = storeinfoServiceMapper;
	}

}
