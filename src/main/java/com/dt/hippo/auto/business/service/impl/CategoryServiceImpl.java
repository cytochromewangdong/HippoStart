/*
 * Created on 13 五月 2015 ( Time 21:15:23 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.auto.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.auto.model.Category;
import com.dt.hippo.auto.model.jpa.CategoryEntity;
import com.dt.hippo.auto.model.jpa.CategoryEntityKey;
import java.util.Date;
import java.util.List;
import com.dt.hippo.auto.business.service.CategoryService;
import com.dt.hippo.auto.business.service.mapping.CategoryServiceMapper;
import com.dt.hippo.auto.data.repository.jpa.CategoryJpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of CategoryService
 */
@Service("categoryService")
@Transactional
public class CategoryServiceImpl implements CategoryService {

	@Resource
	protected CategoryJpaRepository categoryJpaRepository;

	@Resource
	protected CategoryServiceMapper categoryServiceMapper;
	
	@Override
	public Category findById(Long corpid, String uid) {
		CategoryEntityKey id = new CategoryEntityKey(corpid, uid);
		CategoryEntity categoryEntity = categoryJpaRepository.findOne(id);
		return categoryServiceMapper.mapCategoryEntityToCategory(categoryEntity);
	}

	@Override
	public List<Category> findAll() {
		Iterable<CategoryEntity> entities = categoryJpaRepository.findAll();
		List<Category> beans = new ArrayList<Category>();
		for(CategoryEntity categoryEntity : entities) {
			beans.add(categoryServiceMapper.mapCategoryEntityToCategory(categoryEntity));
		}
		return beans;
	}

	@Override
	public Category save(Category category) {
		return update(category) ;
	}

	@Override
	public Category create(Category category) {
		CategoryEntityKey id = new CategoryEntityKey(category.getCorpid(), category.getUid());
		CategoryEntity categoryEntity = categoryJpaRepository.findOne(id);
		if( categoryEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		categoryEntity = new CategoryEntity();
		categoryServiceMapper.mapCategoryToCategoryEntity(category, categoryEntity);
		CategoryEntity categoryEntitySaved = categoryJpaRepository.save(categoryEntity);
		return categoryServiceMapper.mapCategoryEntityToCategory(categoryEntitySaved);
	}

	@Override
	public Category update(Category category) {
		CategoryEntityKey id = new CategoryEntityKey(category.getCorpid(), category.getUid());
		CategoryEntity categoryEntity = categoryJpaRepository.findOne(id);
		categoryServiceMapper.mapCategoryToCategoryEntity(category, categoryEntity);
		CategoryEntity categoryEntitySaved = categoryJpaRepository.save(categoryEntity);
		return categoryServiceMapper.mapCategoryEntityToCategory(categoryEntitySaved);
	}

	@Override
	public void delete(Long corpid, String uid) {
		CategoryEntityKey id = new CategoryEntityKey(corpid, uid);
		categoryJpaRepository.delete(id);
	}

	public CategoryJpaRepository getCategoryJpaRepository() {
		return categoryJpaRepository;
	}

	public void setCategoryJpaRepository(CategoryJpaRepository categoryJpaRepository) {
		this.categoryJpaRepository = categoryJpaRepository;
	}

	public CategoryServiceMapper getCategoryServiceMapper() {
		return categoryServiceMapper;
	}

	public void setCategoryServiceMapper(CategoryServiceMapper categoryServiceMapper) {
		this.categoryServiceMapper = categoryServiceMapper;
	}

}
