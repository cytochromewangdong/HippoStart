/*
 * Created on 14 五月 2015 ( Time 21:14:04 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.dt.hippo.auto.model.jpa.base;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "payment"
 *
 * @author Telosys Tools Generator
 *
 */
@MappedSuperclass
//@Entity
@Table(name="payment", catalog="hippo" )
// Define named queries here
//@NamedQueries ( {
//  @NamedQuery ( name="PaymentEntity.countAll", query="SELECT COUNT(x) FROM PaymentEntity x" )
//} )
public class PaymentEntity implements Serializable {

    protected static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="uid", nullable=false)
    protected Long       uid          ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="userId")
    protected Long       userid       ;

    @Column(name="projectId")
    protected Long       projectid    ;

    @Column(name="tradeNo", length=100)
    protected String     tradeno      ;

    @Column(name="orderNo", length=50)
    protected String     orderno      ;

    @Column(name="orderCurrency", length=3)
    protected String     ordercurrency ;

    @Column(name="orderAmount", length=10)
    protected String     orderamount  ;

    @Column(name="orderStatus")
    protected Byte       orderstatus  ;

    @Column(name="orderInfo", length=500)
    protected String     orderinfo    ;

    @Column(name="riskInfo", length=1000)
    protected String     riskinfo     ;

    @Column(name="paymentMethod")
    protected Byte       paymentmethod ;

    @Column(name="isMobile")
    protected Byte       ismobile     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="tradeDate")
    protected Date       tradedate    ;

    @Column(name="useragent", length=500)
    protected String     useragent    ;

    @Column(name="rawReponseFromPaygate", length=1000)
    protected String     rawreponsefrompaygate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createDate")
    protected Date       createdate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modifyDate")
    protected Date       modifydate   ;

    @Column(name="createUser", length=50)
    protected String     createuser   ;

    @Column(name="modifyUser", length=50)
    protected String     modifyuser   ;

    @Column(name="delFlg")
    protected Byte       delflg       ;

    @Column(name="platform", length=50)
    protected String     platform     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PaymentEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUid( Long uid ) {
        this.uid = uid ;
    }
    public Long getUid() {
        return this.uid;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : userId ( BIGINT ) 
    public void setUserid( Long userid ) {
        this.userid = userid;
    }
    public Long getUserid() {
        return this.userid;
    }

    //--- DATABASE MAPPING : projectId ( BIGINT ) 
    public void setProjectid( Long projectid ) {
        this.projectid = projectid;
    }
    public Long getProjectid() {
        return this.projectid;
    }

    //--- DATABASE MAPPING : tradeNo ( VARCHAR ) 
    public void setTradeno( String tradeno ) {
        this.tradeno = tradeno;
    }
    public String getTradeno() {
        return this.tradeno;
    }

    //--- DATABASE MAPPING : orderNo ( VARCHAR ) 
    public void setOrderno( String orderno ) {
        this.orderno = orderno;
    }
    public String getOrderno() {
        return this.orderno;
    }

    //--- DATABASE MAPPING : orderCurrency ( VARCHAR ) 
    public void setOrdercurrency( String ordercurrency ) {
        this.ordercurrency = ordercurrency;
    }
    public String getOrdercurrency() {
        return this.ordercurrency;
    }

    //--- DATABASE MAPPING : orderAmount ( VARCHAR ) 
    public void setOrderamount( String orderamount ) {
        this.orderamount = orderamount;
    }
    public String getOrderamount() {
        return this.orderamount;
    }

    //--- DATABASE MAPPING : orderStatus ( TINYINT ) 
    public void setOrderstatus( Byte orderstatus ) {
        this.orderstatus = orderstatus;
    }
    public Byte getOrderstatus() {
        return this.orderstatus;
    }

    //--- DATABASE MAPPING : orderInfo ( VARCHAR ) 
    public void setOrderinfo( String orderinfo ) {
        this.orderinfo = orderinfo;
    }
    public String getOrderinfo() {
        return this.orderinfo;
    }

    //--- DATABASE MAPPING : riskInfo ( VARCHAR ) 
    public void setRiskinfo( String riskinfo ) {
        this.riskinfo = riskinfo;
    }
    public String getRiskinfo() {
        return this.riskinfo;
    }

    //--- DATABASE MAPPING : paymentMethod ( TINYINT ) 
    public void setPaymentmethod( Byte paymentmethod ) {
        this.paymentmethod = paymentmethod;
    }
    public Byte getPaymentmethod() {
        return this.paymentmethod;
    }

    //--- DATABASE MAPPING : isMobile ( TINYINT ) 
    public void setIsmobile( Byte ismobile ) {
        this.ismobile = ismobile;
    }
    public Byte getIsmobile() {
        return this.ismobile;
    }

    //--- DATABASE MAPPING : tradeDate ( DATETIME ) 
    public void setTradedate( Date tradedate ) {
        this.tradedate = tradedate;
    }
    public Date getTradedate() {
        return this.tradedate;
    }

    //--- DATABASE MAPPING : useragent ( VARCHAR ) 
    public void setUseragent( String useragent ) {
        this.useragent = useragent;
    }
    public String getUseragent() {
        return this.useragent;
    }

    //--- DATABASE MAPPING : rawReponseFromPaygate ( VARCHAR ) 
    public void setRawreponsefrompaygate( String rawreponsefrompaygate ) {
        this.rawreponsefrompaygate = rawreponsefrompaygate;
    }
    public String getRawreponsefrompaygate() {
        return this.rawreponsefrompaygate;
    }

    //--- DATABASE MAPPING : createDate ( DATETIME ) 
    public void setCreatedate( Date createdate ) {
        this.createdate = createdate;
    }
    public Date getCreatedate() {
        return this.createdate;
    }

    //--- DATABASE MAPPING : modifyDate ( DATETIME ) 
    public void setModifydate( Date modifydate ) {
        this.modifydate = modifydate;
    }
    public Date getModifydate() {
        return this.modifydate;
    }

    //--- DATABASE MAPPING : createUser ( VARCHAR ) 
    public void setCreateuser( String createuser ) {
        this.createuser = createuser;
    }
    public String getCreateuser() {
        return this.createuser;
    }

    //--- DATABASE MAPPING : modifyUser ( VARCHAR ) 
    public void setModifyuser( String modifyuser ) {
        this.modifyuser = modifyuser;
    }
    public String getModifyuser() {
        return this.modifyuser;
    }

    //--- DATABASE MAPPING : delFlg ( TINYINT ) 
    public void setDelflg( Byte delflg ) {
        this.delflg = delflg;
    }
    public Byte getDelflg() {
        return this.delflg;
    }

    //--- DATABASE MAPPING : platform ( VARCHAR ) 
    public void setPlatform( String platform ) {
        this.platform = platform;
    }
    public String getPlatform() {
        return this.platform;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(uid);
        sb.append("]:"); 
        sb.append(userid);
        sb.append("|");
        sb.append(projectid);
        sb.append("|");
        sb.append(tradeno);
        sb.append("|");
        sb.append(orderno);
        sb.append("|");
        sb.append(ordercurrency);
        sb.append("|");
        sb.append(orderamount);
        sb.append("|");
        sb.append(orderstatus);
        sb.append("|");
        sb.append(orderinfo);
        sb.append("|");
        sb.append(riskinfo);
        sb.append("|");
        sb.append(paymentmethod);
        sb.append("|");
        sb.append(ismobile);
        sb.append("|");
        sb.append(tradedate);
        sb.append("|");
        sb.append(useragent);
        sb.append("|");
        sb.append(rawreponsefrompaygate);
        sb.append("|");
        sb.append(createdate);
        sb.append("|");
        sb.append(modifydate);
        sb.append("|");
        sb.append(createuser);
        sb.append("|");
        sb.append(modifyuser);
        sb.append("|");
        sb.append(delflg);
        sb.append("|");
        sb.append(platform);
        return sb.toString(); 
    } 

}
