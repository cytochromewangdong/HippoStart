/*
 * Java bean class for entity table account 
 * Created on 10 五月 2015 ( Date ISO 2015-05-10 - Time 21:40:38 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */

package com.dt.hippo.datajpa.model;

import java.io.Serializable;

import java.util.Date;

/**
 * Entity bean for table "account"
 * 
 * @author Telosys Tools Generator
 *
 */
public class Account implements Serializable
{
    private static final long serialVersionUID = 1L;

    private Long       id           ; // Primary Key

    private String     username     ;
    private Integer    usernamehashcode ;
    private String     email        ;
    private Integer    emailhashcode ;
    private String     md5email     ;
    private String     password     ;
    private String     imageurl     ;
    private String     nickname     ;
    private String     address      ;
    private String     location     ;
    private Byte       usersource   ;
    private String     usersourcename ;
    private String     externaluid  ;
    private String     externalusername ;
    private Byte       emailverified ;
    private String     mobiletoken  ;
    private String     language     ;
    private Date       createdate   ;
    private Date       modifydate   ;
    private String     createuser   ;
    private String     modifyuser   ;
    private Byte       delflg       ;
    private String     platform     ;

    /**
     * Default constructor
     */
    public Account()
    {
        super();
    }
    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR THE PRIMARY KEY 
    //----------------------------------------------------------------------
    /**
     * Set the "id" field value
     * This field is mapped on the database column "id" ( type "BIGINT", NotNull : true ) 
     * @param id
     */
	public void setId( Long id )
    {
        this.id = id ;
    }
    /**
     * Get the "id" field value
     * This field is mapped on the database column "id" ( type "BIGINT", NotNull : true ) 
     * @return the field value
     */
	public Long getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR DATA FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : userName ( VARCHAR ) 
    /**
     * Set the "username" field value
     * This field is mapped on the database column "userName" ( type "VARCHAR", NotNull : false ) 
     * @param username
     */
    public void setUsername( String username )
    {
        this.username = username;
    }
    /**
     * Get the "username" field value
     * This field is mapped on the database column "userName" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getUsername()
    {
        return this.username;
    }

    //--- DATABASE MAPPING : usernameHashcode ( INT ) 
    /**
     * Set the "usernamehashcode" field value
     * This field is mapped on the database column "usernameHashcode" ( type "INT", NotNull : false ) 
     * @param usernamehashcode
     */
    public void setUsernamehashcode( Integer usernamehashcode )
    {
        this.usernamehashcode = usernamehashcode;
    }
    /**
     * Get the "usernamehashcode" field value
     * This field is mapped on the database column "usernameHashcode" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getUsernamehashcode()
    {
        return this.usernamehashcode;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    /**
     * Set the "email" field value
     * This field is mapped on the database column "email" ( type "VARCHAR", NotNull : false ) 
     * @param email
     */
    public void setEmail( String email )
    {
        this.email = email;
    }
    /**
     * Get the "email" field value
     * This field is mapped on the database column "email" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getEmail()
    {
        return this.email;
    }

    //--- DATABASE MAPPING : emailHashcode ( INT ) 
    /**
     * Set the "emailhashcode" field value
     * This field is mapped on the database column "emailHashcode" ( type "INT", NotNull : false ) 
     * @param emailhashcode
     */
    public void setEmailhashcode( Integer emailhashcode )
    {
        this.emailhashcode = emailhashcode;
    }
    /**
     * Get the "emailhashcode" field value
     * This field is mapped on the database column "emailHashcode" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getEmailhashcode()
    {
        return this.emailhashcode;
    }

    //--- DATABASE MAPPING : md5email ( VARCHAR ) 
    /**
     * Set the "md5email" field value
     * This field is mapped on the database column "md5email" ( type "VARCHAR", NotNull : false ) 
     * @param md5email
     */
    public void setMd5email( String md5email )
    {
        this.md5email = md5email;
    }
    /**
     * Get the "md5email" field value
     * This field is mapped on the database column "md5email" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMd5email()
    {
        return this.md5email;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    /**
     * Set the "password" field value
     * This field is mapped on the database column "password" ( type "VARCHAR", NotNull : false ) 
     * @param password
     */
    public void setPassword( String password )
    {
        this.password = password;
    }
    /**
     * Get the "password" field value
     * This field is mapped on the database column "password" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getPassword()
    {
        return this.password;
    }

    //--- DATABASE MAPPING : imageUrl ( VARCHAR ) 
    /**
     * Set the "imageurl" field value
     * This field is mapped on the database column "imageUrl" ( type "VARCHAR", NotNull : false ) 
     * @param imageurl
     */
    public void setImageurl( String imageurl )
    {
        this.imageurl = imageurl;
    }
    /**
     * Get the "imageurl" field value
     * This field is mapped on the database column "imageUrl" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getImageurl()
    {
        return this.imageurl;
    }

    //--- DATABASE MAPPING : nickname ( VARCHAR ) 
    /**
     * Set the "nickname" field value
     * This field is mapped on the database column "nickname" ( type "VARCHAR", NotNull : false ) 
     * @param nickname
     */
    public void setNickname( String nickname )
    {
        this.nickname = nickname;
    }
    /**
     * Get the "nickname" field value
     * This field is mapped on the database column "nickname" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getNickname()
    {
        return this.nickname;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    /**
     * Set the "address" field value
     * This field is mapped on the database column "address" ( type "VARCHAR", NotNull : false ) 
     * @param address
     */
    public void setAddress( String address )
    {
        this.address = address;
    }
    /**
     * Get the "address" field value
     * This field is mapped on the database column "address" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getAddress()
    {
        return this.address;
    }

    //--- DATABASE MAPPING : location ( VARCHAR ) 
    /**
     * Set the "location" field value
     * This field is mapped on the database column "location" ( type "VARCHAR", NotNull : false ) 
     * @param location
     */
    public void setLocation( String location )
    {
        this.location = location;
    }
    /**
     * Get the "location" field value
     * This field is mapped on the database column "location" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getLocation()
    {
        return this.location;
    }

    //--- DATABASE MAPPING : usersource ( TINYINT ) 
    /**
     * Set the "usersource" field value
     * This field is mapped on the database column "usersource" ( type "TINYINT", NotNull : false ) 
     * @param usersource
     */
    public void setUsersource( Byte usersource )
    {
        this.usersource = usersource;
    }
    /**
     * Get the "usersource" field value
     * This field is mapped on the database column "usersource" ( type "TINYINT", NotNull : false ) 
     * @return the field value
     */
    public Byte getUsersource()
    {
        return this.usersource;
    }

    //--- DATABASE MAPPING : usersourceName ( VARCHAR ) 
    /**
     * Set the "usersourcename" field value
     * This field is mapped on the database column "usersourceName" ( type "VARCHAR", NotNull : false ) 
     * @param usersourcename
     */
    public void setUsersourcename( String usersourcename )
    {
        this.usersourcename = usersourcename;
    }
    /**
     * Get the "usersourcename" field value
     * This field is mapped on the database column "usersourceName" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getUsersourcename()
    {
        return this.usersourcename;
    }

    //--- DATABASE MAPPING : externalUID ( VARCHAR ) 
    /**
     * Set the "externaluid" field value
     * This field is mapped on the database column "externalUID" ( type "VARCHAR", NotNull : false ) 
     * @param externaluid
     */
    public void setExternaluid( String externaluid )
    {
        this.externaluid = externaluid;
    }
    /**
     * Get the "externaluid" field value
     * This field is mapped on the database column "externalUID" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getExternaluid()
    {
        return this.externaluid;
    }

    //--- DATABASE MAPPING : externalUserName ( VARCHAR ) 
    /**
     * Set the "externalusername" field value
     * This field is mapped on the database column "externalUserName" ( type "VARCHAR", NotNull : false ) 
     * @param externalusername
     */
    public void setExternalusername( String externalusername )
    {
        this.externalusername = externalusername;
    }
    /**
     * Get the "externalusername" field value
     * This field is mapped on the database column "externalUserName" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getExternalusername()
    {
        return this.externalusername;
    }

    //--- DATABASE MAPPING : emailVerified ( TINYINT ) 
    /**
     * Set the "emailverified" field value
     * This field is mapped on the database column "emailVerified" ( type "TINYINT", NotNull : false ) 
     * @param emailverified
     */
    public void setEmailverified( Byte emailverified )
    {
        this.emailverified = emailverified;
    }
    /**
     * Get the "emailverified" field value
     * This field is mapped on the database column "emailVerified" ( type "TINYINT", NotNull : false ) 
     * @return the field value
     */
    public Byte getEmailverified()
    {
        return this.emailverified;
    }

    //--- DATABASE MAPPING : mobileToken ( VARCHAR ) 
    /**
     * Set the "mobiletoken" field value
     * This field is mapped on the database column "mobileToken" ( type "VARCHAR", NotNull : false ) 
     * @param mobiletoken
     */
    public void setMobiletoken( String mobiletoken )
    {
        this.mobiletoken = mobiletoken;
    }
    /**
     * Get the "mobiletoken" field value
     * This field is mapped on the database column "mobileToken" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMobiletoken()
    {
        return this.mobiletoken;
    }

    //--- DATABASE MAPPING : language ( VARCHAR ) 
    /**
     * Set the "language" field value
     * This field is mapped on the database column "language" ( type "VARCHAR", NotNull : false ) 
     * @param language
     */
    public void setLanguage( String language )
    {
        this.language = language;
    }
    /**
     * Get the "language" field value
     * This field is mapped on the database column "language" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getLanguage()
    {
        return this.language;
    }

    //--- DATABASE MAPPING : createDate ( DATETIME ) 
    /**
     * Set the "createdate" field value
     * This field is mapped on the database column "createDate" ( type "DATETIME", NotNull : false ) 
     * @param createdate
     */
    public void setCreatedate( Date createdate )
    {
        this.createdate = createdate;
    }
    /**
     * Get the "createdate" field value
     * This field is mapped on the database column "createDate" ( type "DATETIME", NotNull : false ) 
     * @return the field value
     */
    public Date getCreatedate()
    {
        return this.createdate;
    }

    //--- DATABASE MAPPING : modifyDate ( DATETIME ) 
    /**
     * Set the "modifydate" field value
     * This field is mapped on the database column "modifyDate" ( type "DATETIME", NotNull : false ) 
     * @param modifydate
     */
    public void setModifydate( Date modifydate )
    {
        this.modifydate = modifydate;
    }
    /**
     * Get the "modifydate" field value
     * This field is mapped on the database column "modifyDate" ( type "DATETIME", NotNull : false ) 
     * @return the field value
     */
    public Date getModifydate()
    {
        return this.modifydate;
    }

    //--- DATABASE MAPPING : createUser ( VARCHAR ) 
    /**
     * Set the "createuser" field value
     * This field is mapped on the database column "createUser" ( type "VARCHAR", NotNull : false ) 
     * @param createuser
     */
    public void setCreateuser( String createuser )
    {
        this.createuser = createuser;
    }
    /**
     * Get the "createuser" field value
     * This field is mapped on the database column "createUser" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getCreateuser()
    {
        return this.createuser;
    }

    //--- DATABASE MAPPING : modifyUser ( VARCHAR ) 
    /**
     * Set the "modifyuser" field value
     * This field is mapped on the database column "modifyUser" ( type "VARCHAR", NotNull : false ) 
     * @param modifyuser
     */
    public void setModifyuser( String modifyuser )
    {
        this.modifyuser = modifyuser;
    }
    /**
     * Get the "modifyuser" field value
     * This field is mapped on the database column "modifyUser" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getModifyuser()
    {
        return this.modifyuser;
    }

    //--- DATABASE MAPPING : delFlg ( TINYINT ) 
    /**
     * Set the "delflg" field value
     * This field is mapped on the database column "delFlg" ( type "TINYINT", NotNull : false ) 
     * @param delflg
     */
    public void setDelflg( Byte delflg )
    {
        this.delflg = delflg;
    }
    /**
     * Get the "delflg" field value
     * This field is mapped on the database column "delFlg" ( type "TINYINT", NotNull : false ) 
     * @return the field value
     */
    public Byte getDelflg()
    {
        return this.delflg;
    }

    //--- DATABASE MAPPING : platform ( VARCHAR ) 
    /**
     * Set the "platform" field value
     * This field is mapped on the database column "platform" ( type "VARCHAR", NotNull : false ) 
     * @param platform
     */
    public void setPlatform( String platform )
    {
        this.platform = platform;
    }
    /**
     * Get the "platform" field value
     * This field is mapped on the database column "platform" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getPlatform()
    {
        return this.platform;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append(id);
        sb.append("|");
        sb.append(username);
        sb.append("|");
        sb.append(usernamehashcode);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(emailhashcode);
        sb.append("|");
        sb.append(md5email);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(imageurl);
        sb.append("|");
        sb.append(nickname);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(location);
        sb.append("|");
        sb.append(usersource);
        sb.append("|");
        sb.append(usersourcename);
        sb.append("|");
        sb.append(externaluid);
        sb.append("|");
        sb.append(externalusername);
        sb.append("|");
        sb.append(emailverified);
        sb.append("|");
        sb.append(mobiletoken);
        sb.append("|");
        sb.append(language);
        sb.append("|");
        sb.append(createdate);
        sb.append("|");
        sb.append(modifydate);
        sb.append("|");
        sb.append(createuser);
        sb.append("|");
        sb.append(modifyuser);
        sb.append("|");
        sb.append(delflg);
        sb.append("|");
        sb.append(platform);
        return sb.toString(); 
    } 


}
