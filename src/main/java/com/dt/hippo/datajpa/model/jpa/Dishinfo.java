/*
 * Created on 11 五月 2015 ( Time 23:06:09 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.dt.hippo.datajpa.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "dishinfo"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="dishinfo", catalog="hippo" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Dishinfo.countAll", query="SELECT COUNT(x) FROM Dishinfo x" )
} )
public class Dishinfo implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="uid", nullable=false)
    private Long       uid          ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="no", length=10)
    private String     no           ;

    @Column(name="dishName", length=200)
    private String     dishname     ;

    @Column(name="dishDescription", length=300)
    private String     dishdescription ;

    @Column(name="imageUrl", length=300)
    private String     imageurl     ;

    @Column(name="price")
    private Double     price        ;

    @Column(name="type")
    private Byte       type         ;

    @Column(name="hasSpecification")
    private Byte       hasspecification ;

    @Column(name="startDate")
    private Integer    startdate    ;

    @Column(name="endDate")
    private Integer    enddate      ;

    @Column(name="paused")
    private Byte       paused       ;

    @Column(name="promotionTime")
    private Integer    promotiontime ;

    @Column(name="promotionEndTime")
    private Integer    promotionendtime ;

    @Column(name="promotionPrice")
    private Double     promotionprice ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createDate")
    private Date       createdate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modifyDate")
    private Date       modifydate   ;

    @Column(name="createUser", length=50)
    private String     createuser   ;

    @Column(name="modifyUser", length=50)
    private String     modifyuser   ;

    @Column(name="delFlg")
    private Byte       delflg       ;

    @Column(name="platform", length=50)
    private String     platform     ;

	// "corpid" (column "corpId") is not defined by itself because used as FK in a link 
	// "categoryid" (column "categoryId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="dishinfo", targetEntity=Comboinfo.class)
    private List<Comboinfo> listOfComboinfo;

    @OneToMany(mappedBy="dishinfo", targetEntity=Dishspecificationinfo.class)
    private List<Dishspecificationinfo> listOfDishspecificationinfo;

    @ManyToOne
    @JoinColumns( { 
        @JoinColumn(name="corpId", referencedColumnName="corpId"),
        @JoinColumn(name="categoryId", referencedColumnName="uid") } )
    private Category category    ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Dishinfo() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUid( Long uid ) {
        this.uid = uid ;
    }
    public Long getUid() {
        return this.uid;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : no ( VARCHAR ) 
    public void setNo( String no ) {
        this.no = no;
    }
    public String getNo() {
        return this.no;
    }

    //--- DATABASE MAPPING : dishName ( VARCHAR ) 
    public void setDishname( String dishname ) {
        this.dishname = dishname;
    }
    public String getDishname() {
        return this.dishname;
    }

    //--- DATABASE MAPPING : dishDescription ( VARCHAR ) 
    public void setDishdescription( String dishdescription ) {
        this.dishdescription = dishdescription;
    }
    public String getDishdescription() {
        return this.dishdescription;
    }

    //--- DATABASE MAPPING : imageUrl ( VARCHAR ) 
    public void setImageurl( String imageurl ) {
        this.imageurl = imageurl;
    }
    public String getImageurl() {
        return this.imageurl;
    }

    //--- DATABASE MAPPING : price ( DOUBLE ) 
    public void setPrice( Double price ) {
        this.price = price;
    }
    public Double getPrice() {
        return this.price;
    }

    //--- DATABASE MAPPING : type ( TINYINT ) 
    public void setType( Byte type ) {
        this.type = type;
    }
    public Byte getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : hasSpecification ( TINYINT ) 
    public void setHasspecification( Byte hasspecification ) {
        this.hasspecification = hasspecification;
    }
    public Byte getHasspecification() {
        return this.hasspecification;
    }

    //--- DATABASE MAPPING : startDate ( INT ) 
    public void setStartdate( Integer startdate ) {
        this.startdate = startdate;
    }
    public Integer getStartdate() {
        return this.startdate;
    }

    //--- DATABASE MAPPING : endDate ( INT ) 
    public void setEnddate( Integer enddate ) {
        this.enddate = enddate;
    }
    public Integer getEnddate() {
        return this.enddate;
    }

    //--- DATABASE MAPPING : paused ( TINYINT ) 
    public void setPaused( Byte paused ) {
        this.paused = paused;
    }
    public Byte getPaused() {
        return this.paused;
    }

    //--- DATABASE MAPPING : promotionTime ( INT ) 
    public void setPromotiontime( Integer promotiontime ) {
        this.promotiontime = promotiontime;
    }
    public Integer getPromotiontime() {
        return this.promotiontime;
    }

    //--- DATABASE MAPPING : promotionEndTime ( INT ) 
    public void setPromotionendtime( Integer promotionendtime ) {
        this.promotionendtime = promotionendtime;
    }
    public Integer getPromotionendtime() {
        return this.promotionendtime;
    }

    //--- DATABASE MAPPING : promotionPrice ( DOUBLE ) 
    public void setPromotionprice( Double promotionprice ) {
        this.promotionprice = promotionprice;
    }
    public Double getPromotionprice() {
        return this.promotionprice;
    }

    //--- DATABASE MAPPING : createDate ( DATETIME ) 
    public void setCreatedate( Date createdate ) {
        this.createdate = createdate;
    }
    public Date getCreatedate() {
        return this.createdate;
    }

    //--- DATABASE MAPPING : modifyDate ( DATETIME ) 
    public void setModifydate( Date modifydate ) {
        this.modifydate = modifydate;
    }
    public Date getModifydate() {
        return this.modifydate;
    }

    //--- DATABASE MAPPING : createUser ( VARCHAR ) 
    public void setCreateuser( String createuser ) {
        this.createuser = createuser;
    }
    public String getCreateuser() {
        return this.createuser;
    }

    //--- DATABASE MAPPING : modifyUser ( VARCHAR ) 
    public void setModifyuser( String modifyuser ) {
        this.modifyuser = modifyuser;
    }
    public String getModifyuser() {
        return this.modifyuser;
    }

    //--- DATABASE MAPPING : delFlg ( TINYINT ) 
    public void setDelflg( Byte delflg ) {
        this.delflg = delflg;
    }
    public Byte getDelflg() {
        return this.delflg;
    }

    //--- DATABASE MAPPING : platform ( VARCHAR ) 
    public void setPlatform( String platform ) {
        this.platform = platform;
    }
    public String getPlatform() {
        return this.platform;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfComboinfo( List<Comboinfo> listOfComboinfo ) {
        this.listOfComboinfo = listOfComboinfo;
    }
    public List<Comboinfo> getListOfComboinfo() {
        return this.listOfComboinfo;
    }

    public void setListOfDishspecificationinfo( List<Dishspecificationinfo> listOfDishspecificationinfo ) {
        this.listOfDishspecificationinfo = listOfDishspecificationinfo;
    }
    public List<Dishspecificationinfo> getListOfDishspecificationinfo() {
        return this.listOfDishspecificationinfo;
    }

    public void setCategory( Category category ) {
        this.category = category;
    }
    public Category getCategory() {
        return this.category;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(uid);
        sb.append("]:"); 
        sb.append(no);
        sb.append("|");
        sb.append(dishname);
        sb.append("|");
        sb.append(dishdescription);
        sb.append("|");
        sb.append(imageurl);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(hasspecification);
        sb.append("|");
        sb.append(startdate);
        sb.append("|");
        sb.append(enddate);
        sb.append("|");
        sb.append(paused);
        sb.append("|");
        sb.append(promotiontime);
        sb.append("|");
        sb.append(promotionendtime);
        sb.append("|");
        sb.append(promotionprice);
        sb.append("|");
        sb.append(createdate);
        sb.append("|");
        sb.append(modifydate);
        sb.append("|");
        sb.append(createuser);
        sb.append("|");
        sb.append(modifyuser);
        sb.append("|");
        sb.append(delflg);
        sb.append("|");
        sb.append(platform);
        return sb.toString(); 
    } 

}
