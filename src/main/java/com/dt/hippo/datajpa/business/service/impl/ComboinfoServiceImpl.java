/*
 * Created on 11 五月 2015 ( Time 23:06:07 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.datajpa.business.service.impl;

import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.datajpa.model.jpa.Comboinfo;
import com.dt.hippo.datajpa.model.jpa.ComboinfoKey;
import java.util.Date;
import com.dt.hippo.datajpa.business.service.ComboinfoService;
import com.dt.hippo.datajpa.data.repository.jpa.ComboinfoJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ComboinfoService
 */
@Component
@Transactional
public class ComboinfoServiceImpl implements ComboinfoService {

	@Resource
	private ComboinfoJpaRepository comboinfoJpaRepository;

	
	@Override
    @Transactional(readOnly = true)
	public Comboinfo findById(Long uid, Long childid, Long specificationid) {
		ComboinfoKey id = new ComboinfoKey(uid, childid, specificationid);
		return comboinfoJpaRepository.findOne(id);
	}

	@Override
    @Transactional(readOnly = true)
	public List<Comboinfo> findAll() {
		return  comboinfoJpaRepository.findAll();
	}

	@Override
	public Comboinfo save(Comboinfo comboinfo) {
		return comboinfoJpaRepository.save(comboinfo) ;
	}

	@Override
	public Comboinfo create(Comboinfo comboinfo) {
		ComboinfoKey id = new ComboinfoKey(comboinfo.getUid(), comboinfo.getChildid(), comboinfo.getSpecificationid());
		Comboinfo comboinfoExisted = comboinfoJpaRepository.findOne(id);
		if( comboinfoExisted != null ) {
			throw new IllegalStateException("already.exists");
		}
		return comboinfoJpaRepository.save(comboinfo);
	}

	@Override
	public Comboinfo update(Comboinfo comboinfo) {
		ComboinfoKey id = new ComboinfoKey(comboinfo.getUid(), comboinfo.getChildid(), comboinfo.getSpecificationid());
		Comboinfo comboinfoExisted = comboinfoJpaRepository.findOne(id);
        if (comboinfoExisted == null) {
            throw new IllegalStateException("not exists");
        }
		return comboinfoJpaRepository.save(comboinfo);
	}

	@Override
	public void delete(Long uid, Long childid, Long specificationid) {
		ComboinfoKey id = new ComboinfoKey(uid, childid, specificationid);
		comboinfoJpaRepository.delete(id);
	}

	public ComboinfoJpaRepository getComboinfoJpaRepository() {
		return comboinfoJpaRepository;
	}

	public void setComboinfoJpaRepository(ComboinfoJpaRepository comboinfoJpaRepository) {
		this.comboinfoJpaRepository = comboinfoJpaRepository;
	}



}
