/*
 * Created on 21 ���� 2014 ( Time 16:43:28 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.datajpa.business.service.impl;

import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.datajpa.business.service.ContactHobbyDetailService;
import com.dt.hippo.datajpa.data.repository.jpa.ContactHobbyDetailJpaRepository;
import com.dt.hippo.datajpa.model.jpa.ContactHobbyDetail;
import com.dt.hippo.datajpa.model.jpa.ContactHobbyDetailKey;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ContactHobbyDetailService
 */
@Component
@Transactional
public class ContactHobbyDetailServiceImpl implements ContactHobbyDetailService {

	@Resource
	private ContactHobbyDetailJpaRepository contactHobbyDetailJpaRepository;

	
	@Override
    @Transactional(readOnly = true)
	public ContactHobbyDetail findById(Integer contactId, String hobbyId) {
		ContactHobbyDetailKey id = new ContactHobbyDetailKey(contactId, hobbyId);
		return contactHobbyDetailJpaRepository.findOne(id);
	}

	@Override
    @Transactional(readOnly = true)
	public List<ContactHobbyDetail> findAll() {
		return  contactHobbyDetailJpaRepository.findAll();
	}

	@Override
	public ContactHobbyDetail save(ContactHobbyDetail contactHobbyDetail) {
		return contactHobbyDetailJpaRepository.save(contactHobbyDetail) ;
	}

	@Override
	public ContactHobbyDetail create(ContactHobbyDetail contactHobbyDetail) {
		ContactHobbyDetailKey id = new ContactHobbyDetailKey(contactHobbyDetail.getContactId(), contactHobbyDetail.getHobbyId());
		ContactHobbyDetail contactHobbyDetailExisted = contactHobbyDetailJpaRepository.findOne(id);
		if( contactHobbyDetailExisted != null ) {
			throw new IllegalStateException("already.exists");
		}
		return contactHobbyDetailJpaRepository.save(contactHobbyDetail);
	}

	@Override
	public ContactHobbyDetail update(ContactHobbyDetail contactHobbyDetail) {
		ContactHobbyDetailKey id = new ContactHobbyDetailKey(contactHobbyDetail.getContactId(), contactHobbyDetail.getHobbyId());
		ContactHobbyDetail contactHobbyDetailExisted = contactHobbyDetailJpaRepository.findOne(id);
        if (contactHobbyDetailExisted == null) {
            throw new IllegalStateException("not exists");
        }
		return contactHobbyDetailJpaRepository.save(contactHobbyDetail);
	}

	@Override
	public void delete(Integer contactId, String hobbyId) {
		ContactHobbyDetailKey id = new ContactHobbyDetailKey(contactId, hobbyId);
		contactHobbyDetailJpaRepository.delete(id);
	}

	public ContactHobbyDetailJpaRepository getContactHobbyDetailJpaRepository() {
		return contactHobbyDetailJpaRepository;
	}

	public void setContactHobbyDetailJpaRepository(ContactHobbyDetailJpaRepository contactHobbyDetailJpaRepository) {
		this.contactHobbyDetailJpaRepository = contactHobbyDetailJpaRepository;
	}



}
