/*
 * Created on 21 ���� 2014 ( Time 16:43:28 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.datajpa.business.service.impl;

import java.util.List;

import javax.annotation.Resource;

import java.util.Date;
import java.util.List;

import com.dt.hippo.datajpa.business.service.ContactService;
import com.dt.hippo.datajpa.data.repository.jpa.ContactJpaRepository;
import com.dt.hippo.datajpa.model.jpa.Contact;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ContactService
 */
@Component("contactService")
@Transactional
public class ContactServiceImpl implements ContactService {

	@Resource
	private ContactJpaRepository contactJpaRepository;

	
	@Override
    @Transactional(readOnly = true)
	public Contact findById(Integer id) {
		return contactJpaRepository.findOne(id);
	}

	@Override
    @Transactional(readOnly = true)
	public List<Contact> findAll() {
		return  contactJpaRepository.findAll();
	}

	@Override
	public Contact save(Contact contact) {
		return contactJpaRepository.save(contact) ;
	}

	@Override
	public Contact create(Contact contact) {
		Contact contactExisted = contactJpaRepository.findOne(contact.getId());
		if( contactExisted != null ) {
			throw new IllegalStateException("already.exists");
		}
		return contactJpaRepository.save(contact);
	}

	@Override
	public Contact update(Contact contact) {
		Contact contactExisted = contactJpaRepository.findOne(contact.getId());
        if (contactExisted == null) {
            throw new IllegalStateException("not exists");
        }
		return contactJpaRepository.save(contact);
	}

	@Override
	public void delete(Integer id) {
		contactJpaRepository.delete(id);
	}

	public ContactJpaRepository getContactJpaRepository() {
		return contactJpaRepository;
	}

	public void setContactJpaRepository(ContactJpaRepository contactJpaRepository) {
		this.contactJpaRepository = contactJpaRepository;
	}



}
