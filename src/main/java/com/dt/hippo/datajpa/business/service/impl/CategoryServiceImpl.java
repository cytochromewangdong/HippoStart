/*
 * Created on 11 五月 2015 ( Time 23:06:06 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.dt.hippo.datajpa.business.service.impl;

import java.util.List;

import javax.annotation.Resource;

import com.dt.hippo.datajpa.model.jpa.Category;
import com.dt.hippo.datajpa.model.jpa.CategoryKey;
import java.util.Date;
import java.util.List;
import com.dt.hippo.datajpa.business.service.CategoryService;
import com.dt.hippo.datajpa.data.repository.jpa.CategoryJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of CategoryService
 */
@Component
@Transactional
public class CategoryServiceImpl implements CategoryService {

	@Resource
	private CategoryJpaRepository categoryJpaRepository;

	
	@Override
    @Transactional(readOnly = true)
	public Category findById(Long corpid, String uid) {
		CategoryKey id = new CategoryKey(corpid, uid);
		return categoryJpaRepository.findOne(id);
	}

	@Override
    @Transactional(readOnly = true)
	public List<Category> findAll() {
		return  categoryJpaRepository.findAll();
	}

	@Override
	public Category save(Category category) {
		return categoryJpaRepository.save(category) ;
	}

	@Override
	public Category create(Category category) {
		CategoryKey id = new CategoryKey(category.getCorpid(), category.getUid());
		Category categoryExisted = categoryJpaRepository.findOne(id);
		if( categoryExisted != null ) {
			throw new IllegalStateException("already.exists");
		}
		return categoryJpaRepository.save(category);
	}

	@Override
	public Category update(Category category) {
		CategoryKey id = new CategoryKey(category.getCorpid(), category.getUid());
		Category categoryExisted = categoryJpaRepository.findOne(id);
        if (categoryExisted == null) {
            throw new IllegalStateException("not exists");
        }
		return categoryJpaRepository.save(category);
	}

	@Override
	public void delete(Long corpid, String uid) {
		CategoryKey id = new CategoryKey(corpid, uid);
		categoryJpaRepository.delete(id);
	}

	public CategoryJpaRepository getCategoryJpaRepository() {
		return categoryJpaRepository;
	}

	public void setCategoryJpaRepository(CategoryJpaRepository categoryJpaRepository) {
		this.categoryJpaRepository = categoryJpaRepository;
	}



}
